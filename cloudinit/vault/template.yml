#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@overlay/match by=overlay.all,expects="0+"
#@overlay/match-child-defaults missing_ok=True
---
groups:
- vault
users:
- name: vault
  primary_group: vault
  system: true
  home: /opt/vault
  shell: /bin/false
  sudo: False
write_files:
- path: /run/vault.hcl
  owner: root:root
  permissions: '0644'
  #@yaml/text-templated-strings
  content: |
    ui = true
    api_addr = "(@= data.values.hostname @).(@= data.values.zone @):8200"

    disable_mlock = true

    storage "file" {
      path = "/opt/vault/data"
    }

    # HTTPS listener
    listener "tcp" {
      address       = "0.0.0.0:8200"
      tls_cert_file = "/opt/vault/tls/tls.crt"
      tls_key_file  = "/opt/vault/tls/tls.key"
    }
- path: /usr/local/bin/rotate-root-token
  owner: root:root
  permissions: '0755'
  #@yaml/text-templated-strings
  content: |
    #!/usr/bin/env bash
    set -euo pipefail

    echo "enter unseal key:"
    read -s VAULT_UNSEAL_KEY
    echo "enter root token:"
    read -s VAULT_TOKEN

    export VAULT_ADDR=https://(@= data.values.hostname @).(@= data.values.zone @):8200

    VAULT_ROTATE=$(vault operator generate-root -init -format json)
    VAULT_NONCE=$(jq -r .nonce <<< $VAULT_ROTATE)
    VAULT_OTP=$(jq -r .otp <<< $VAULT_ROTATE)
    VAULT_ENCRYPTED_TOKEN=$(vault operator generate-root -format json -nonce=$VAULT_NONCE $VAULT_UNSEAL_KEY | jq -r .encoded_token)

    echo -e "Save the token below. It will not be displayed again:\n\n $(vault operator generate-root -format json -nonce=$VAULT_NONCE -otp $VAULT_OTP -decode=$VAULT_ENCRYPTED_TOKEN | jq -r .token)" | less

    echo 'Revoke current token? [Y/n]'
    read REVOKE

    if [[ "$REVOKE" == "Y" ]]
    then
      vault token revoke $VAULT_TOKEN
    fi
- path: /usr/local/bin/rotate-unseal-key
  owner: root:root
  permissions: '0755'
  #@yaml/text-templated-strings
  content: |
    #!/usr/bin/env bash
    set -euo pipefail

    echo "enter unseal key:"
    read -s VAULT_UNSEAL_KEY
    echo "enter root token:"
    read -s VAULT_TOKEN

    export VAULT_ADDR=https://(@= data.values.hostname @).(@= data.values.zone @):8200

    VAULT_ROTATE=$(vault operator rekey -init -format json -key-shares=1 -key-threshold=1)
    VAULT_NONCE=$(jq -r .nonce <<< $VAULT_ROTATE)

    NEW_VAULT_KEY=$(vault operator rekey -format json -nonce $VAULT_NONCE $VAULT_UNSEAL_KEY | jq -r .keys[0])

    echo -e "Save the key below. It will not be displayed again:\n\n $NEW_VAULT_KEY" | less
packages:
- gpg
- jq
runcmd:
- swapoff -a
- wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
- echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
- apt update && apt install -y vault
- chown -R vault /opt/vault/data
- chown -R vault /opt/vault/tls
- cp /run/vault.hcl /etc/vault.d/vault.hcl
- chown vault:vault /etc/vault.d/vault.hcl
- chown -R vault:vault /opt/vault
- systemctl enable vault
- systemctl start vault
- systemctl is-active vault --wait
#@yaml/text-templated-strings
- export VAULT_ADDR=https://(@= data.values.hostname @).(@= data.values.zone @):8200
- vault operator init -key-shares=1 -key-threshold=1 -non-interactive -format json > /root/vaultinit.json
- export VAULT_TOKEN=$(jq -r .root_token /root/vaultinit.json)
- vault operator unseal -non-interactive $(jq -r .unseal_keys_hex[0] /root/vaultinit.json)
- |
  vault policy write kv - <<EOF
  path "kv/*" {
    capabilities = ["create", "read", "update", "patch", "delete", "list"]
  }
  EOF
- vault auth enable oidc
- vault secrets enable kv
#@yaml/text-templated-strings
- |
  vault write auth/oidc/role/vault_user \
      bound_audiences="vault" \
      allowed_redirect_uris="https://(@= data.values.hostname @).(@= data.values.zone @):8200/ui/vault/auth/oidc/oidc/callback" \
      allowed_redirect_uris="https://(@= data.values.hostname @).(@= data.values.zone @):8250/oidc/callback" \
      user_claim="preferred_username" \
      token_policies="kv"