#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@overlay/match by=overlay.all,expects="0+"
#@overlay/match-child-defaults missing_ok=True
---
groups:
- vault
users:
- name: vault
  primary_group: vault
  system: true
  homedir: /opt/vault
  shell: /bin/false
  sudo: null
write_files:
- path: /run/vault.hcl
  owner: root:root
  permissions: '0644'
  #@yaml/text-templated-strings
  content: |
    ui = true
    api_addr = "(@= data.values.hostname @).(@= data.values.zone @):8200"

    disable_mlock = true

    storage "file" {
      path = "/opt/vault/data"
    }

    # HTTPS listener
    listener "tcp" {
      address       = "0.0.0.0:8200"
      tls_cert_file = "/opt/vault/tls/tls.crt"
      tls_key_file  = "/opt/vault/tls/tls.key"
    }
- path: /usr/local/bin/rotate-root-token
  owner: root:root
  permissions: '0755'
  #@yaml/text-templated-strings
  content: |
    #!/usr/bin/env bash
    set -euo pipefail

    if [[ -z "${VAULT_UNSEAL_KEY:-}" ]]
    then
      >&2 echo "enter unseal key:"
      read -s VAULT_UNSEAL_KEY
    fi
    if [[ -z "${VAULT_TOKEN:-}" ]]
    then
      >&2 echo "enter root token:"
      read -s VAULT_TOKEN
    fi
    export VAULT_ADDR=https://(@= data.values.hostname @).(@= data.values.zone @):8200

    VAULT_ROTATE=$(vault operator generate-root -init -format json)
    VAULT_NONCE=$(jq -r .nonce <<< $VAULT_ROTATE)
    VAULT_OTP=$(jq -r .otp <<< $VAULT_ROTATE)
    VAULT_ENCRYPTED_TOKEN=$(vault operator generate-root -format json -nonce=$VAULT_NONCE $VAULT_UNSEAL_KEY | jq -r .encoded_token)

    >&2 echo -e "Save the token below. It will not be displayed again:\n\n"
    vault operator generate-root -format json -nonce=$VAULT_NONCE -otp $VAULT_OTP -decode=$VAULT_ENCRYPTED_TOKEN | jq -r .token

    if [[ -z "${REVOKE:-}" ]]
    then
      >&2 echo 'Revoke current token? [Y/n]'
      read REVOKE
    fi

    if [[ "$REVOKE" == "Y" ]]
    then
      >&2 vault token revoke $VAULT_TOKEN
    fi
- path: /usr/local/bin/rotate-unseal-key
  owner: root:root
  permissions: '0755'
  #@yaml/text-templated-strings
  content: |
    #!/usr/bin/env bash
    set -euo pipefail

    if [[ -z "${VAULT_UNSEAL_KEY:-}" ]]
    then
      >&2 echo "enter unseal key:"
      read -s VAULT_UNSEAL_KEY
    fi
    if [[ -z "${VAULT_TOKEN:-}" ]]
    then
      >&2 echo "enter root token:"
      read -s VAULT_TOKEN
    fi

    export VAULT_ADDR=https://(@= data.values.hostname @).(@= data.values.zone @):8200

    VAULT_ROTATE=$(vault operator rekey -init -format json -key-shares=1 -key-threshold=1)
    VAULT_NONCE=$(jq -r .nonce <<< $VAULT_ROTATE)

    >&2 echo -e "Save the key below. It will not be displayed again:\n\n"

    vault operator rekey -format json -nonce $VAULT_NONCE $VAULT_UNSEAL_KEY | jq -r .keys[0]
- path: /usr/local/bin/add-app-role.sh
  owner: root:root
  permissions: '0755'
  #@yaml/text-templated-strings
  content: #@ data.values.add_app_role_script
- path: /root/runcmd
  owner: root:root
  permissions: '0750'
  #@yaml/text-templated-strings
  content: #@ data.values.runcmd
packages:
- gpg
- jq
runcmd:
- /root/runcmd