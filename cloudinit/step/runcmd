#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR=$(cd $(dirname $0) && pwd)

pushd ${SCRIPT_DIR}

# args
OPTIONS=(network domain)

help_this="initialize smallstep certificate authority"
help_domain="parent domain (e.g. home.arpa)"
help_network="internal network cidr"

export hostname=$(hostname)

../base/runcmd

source /usr/local/include/argshelper
parseargs $@
requireargs domain network


id -u step || adduser --system step --home /etc/step-ca --group

ACME=https://${hostname}.${domain}/acme/acme/directory

wget --progress=dot:giga https://dl.smallstep.com/gh-release/cli/docs-cli-install/v0.25.1/step-cli_0.25.1_amd64.deb
wget --progress=dot:giga https://dl.smallstep.com/gh-release/certificates/gh-release-header/v0.25.2/step-ca_0.25.2_amd64.deb
dpkg -i step-cli_0.25.1_amd64.deb
dpkg -i step-ca_0.25.2_amd64.deb
setcap CAP_NET_BIND_SERVICE=+eip $(which step-ca)

mkdir -p /etc/step-ca

if [[ ! -f /etc/step-ca/password.txt ]]
then
  PLACEHOLDER_CRED=$(generatecred)
  echo $PLACEHOLDER_CRED > /etc/step-ca/password.txt
  chmod 400 /etc/step-ca/password.txt
fi

export STEPPATH=/etc/step-ca
if [[ ! -f /etc/step-ca/certs/intermediate_ca.crt ]]
then
  step ca init --remote-management --acme \
    --name homelab-pki \
    --dns ${hostname}.${domain} \
    --address 0.0.0.0:443 \
    --with-ca-url https://${hostname}.${domain} \
    --provisioner cert-provisioner \
    --password-file /etc/step-ca/password.txt
fi


sed -e "s/\${hostname}/${hostname}/g" -e "s/\${domain}/${domain}/g" -e "s:\${network}:${network}:g" conf/ca.json > /etc/step-ca/config/ca.json
chown -R step:step /etc/step-ca

cp -r /etc/step-ca/certs/* /usr/local/share/ca-certificates/
chmod -R a+r /usr/local/share/ca-certificates/*.crt
update-ca-certificates

wget --progress=dot:giga https://raw.githubusercontent.com/smallstep/certificates/v0.25.2/systemd/step-ca.service -O /etc/systemd/system/step-ca.service

systemctl enable --now step-ca
systemctl is-active step-ca --wait

while ! curl -fSsL https://${hostname}.${domain}:443/health; do echo waiting for step ca; sleep 2; done

addcaddy.sh
usermod -aG step caddy
chmod g+rx /etc/step-ca/certs
chmod g+r /etc/step-ca/certs/root_ca.crt
sed -e "s/\${domain}/${hostname}.${domain}/g" conf/Caddyfile > /etc/caddy/Caddyfile

step certificate fingerprint /etc/step-ca/certs/root_ca.crt > /usr/share/caddy/fingerprint
cp /etc/step-ca/certs/root_ca.crt /usr/share/caddy/step_root_ca.crt
cp /etc/step-ca/certs/intermediate_ca.crt /usr/share/caddy/step_intermediate_ca.crt

chmod g+w /usr/share/caddy/*
chmod -R a+r /usr/share/caddy

systemctl restart caddy
systemctl is-active caddy --wait
while ! curl -SsL https://${hostname}.${domain}:8444/; do echo waiting for caddy tls; sleep 2; done

# smoke test
curl -fSsL https://${hostname}.${domain}:8444/step_root_ca.crt
sudo -u ubuntu -- bash -c "export STEPPATH=/home/ubuntu/.step; step ca bootstrap --ca-url https://${hostname}.${domain}:443 --install --fingerprint $(step certificate fingerprint  /usr/local/share/ca-certificates/root_ca.crt)"

popd

echo success