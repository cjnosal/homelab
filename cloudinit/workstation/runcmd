#!/usr/bin/env bash
set -euo pipefail
SCRIPT_DIR=$(cd $(dirname $0) && pwd)

pushd ${SCRIPT_DIR}

# args
FLAGS=(desktop)
OPTIONS=(domain userfile ldap pve keycloak vault harbor gitlab step minio)

help_this="initialize workstation"
help_domain="parent domain of this environment"
help_userfile="path of user.yml defining profile for workstation user"

help_ldap="url of LDAP host"
help_step="url of step host"
help_pve="url of proxmox host"
help_keycloak="url of keycloak host"
help_vault="url of vault host"
help_harbor="url of harbor host"
help_gitlab="url of gitlab host"
help_minio="url of minio host"
help_desktop="install desktop environment"


../base/runcmd

source /usr/local/include/argshelper
parseargs $@
requireargs domain

if [[ "${desktop}" == "1" ]]
then
  requireargs userfile
fi

ldap=${ldap:-ldap.${domain}}
step=${step:-step.${domain}}

#bookmarks
pve=${pve:-pve.${domain}:8006}
keycloak=${keycloak:-keycloak.${domain}:8443}
vault=${vault:-vault.${domain}:8200}
harbor=${harbor:-harbor.eng.${domain}}
gitlab=${gitlab:-gitlab.eng.${domain}}
minio=${minio:-minio.${domain}:9000}


# ldap dc components from $domain
export suffix=$(sed -e 's/\./ /g' <<< ${domain} | xargs printf ",dc=%s" | sed -e 's/^,//')

# conf

debconf-set-selections <<EOF
nslcd nslcd/ldap-reqcert string demand
nslcd nslcd/ldap-uris string ldaps://${ldap}
nslcd nslcd/ldap-base string $suffix
nslcd nslcd/ldap-cacertfile string /etc/ssl/certs/ca-certificates.crt
nslcd nslcd/ldap-auth-type string none

ldap-auth-config ldap-auth-config/ldapns/ldap_version string 3
ldap-auth-config ldap-auth-config/ldapns/base-dn string $suffix
ldap-auth-config ldap-auth-config/ldapns/ldap-server string ldaps://${ldap}
ldap-auth-config ldap-auth-config/move-to-debconf boolean true
ldap-auth-config ldap-auth-config/dbrootlogin boolean false
ldap-auth-config ldap-auth-config/dblogin boolean false

EOF

sed -e "s|\${ldap}|$ldap|g" -e "s/\${suffix}/$suffix/g" conf/ldap.conf > /etc/ldap/ldap.conf
cat > /usr/local/include/ldap.env << EOF
   SUFFIX=${suffix}
   HOST=${ldap}
   DOMAIN=${domain}
EOF

cat > /usr/local/include/vault.env << EOF
export VAULT_ADDR=https://${vault}
EOF

cat > /usr/local/include/keycloak.env << EOF
SUFFIX=${suffix}
HOST=https://${keycloak}
DOMAIN=${domain}
LDAP_HOST=${ldap}
EOF


cp conf/nsswitch.conf /etc/nsswitch.conf

if [[ "${desktop}" == "1" ]]
then
  cp conf/.xscreensaver /etc/skel/
  mkdir -p /usr/lib/thunderbird/distribution
  cp conf/thunderbird-policies.json /usr/lib/thunderbird/distribution/policies.json
  mkdir -p /etc/firefox/policies
  sed -e "s|\${pve}|$pve|g" -e "s|\${keycloak}|$keycloak|g" -e "s|\${vault}|$vault|g" \
    -e "s|\${harbor}|$harbor|g" -e "s|\${gitlab}|$gitlab|g"  -e "s|\${minio}|$minio|g"  \
    conf/firefox-policies.json > /etc/firefox/policies/policies.json
fi

# scripts
sed -e "s|\${vault}|$vault|g" -e "s|\${step}|$step|g" -e "s|\${domain}|$domain|g" -e "s|\${minio}|$minio|g"  scripts/.homelab > /etc/skel/.homelab
chmod a+rx /etc/skel/.homelab
cp ../ldap/scripts/* /usr/local/bin/
cp ../ldap/include/* /usr/local/include/
cp ../keycloak/scripts/* /usr/local/bin/
cp ../vault/scripts/* /usr/local/bin/

/usr/local/bin/getsshserverca --vault https://${vault} --domain ${domain}

# packages
wget --progress=dot:giga https://github.com/carvel-dev/ytt/releases/download/v0.46.3/ytt-linux-amd64 -O /usr/local/bin/ytt
chmod a+rx /usr/local/bin/ytt

wget --progress=dot:giga https://github.com/carvel-dev/kapp/releases/download/v0.60.0/kapp-linux-amd64 -O /usr/local/bin/kapp
chmod a+rx /usr/local/bin/kapp

wget --progress=dot:giga https://dl.smallstep.com/gh-release/cli/docs-cli-install/v0.24.4/step-cli_0.24.4_amd64.deb
dpkg -i step-cli_0.24.4_amd64.deb
wget --progress=dot:giga -O- https://apt.releases.hashicorp.com/gpg | gpg --yes --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list

apt-get update
apt-get install -y bind9utils dnsutils jq openjdk-19-jre-headless apache2-utils
apt-get install -y ldap-utils libpam-ldap libnss-ldap nslcd vault

if [[ "${desktop}" == "1" ]]
then
  apt-get install -y lubuntu-desktop xrdp thunderbird firefox
fi

wget --progress=dot:giga https://github.com/keycloak/keycloak/releases/download/22.0.0/keycloak-22.0.0.tar.gz
tar -xf keycloak-22.0.0.tar.gz
mv keycloak-22.0.0/bin/* /usr/local/bin/
rm keycloak-22.0.0.tar.gz

wget --progress=dot:giga https://get.pinniped.dev/v0.28.0/pinniped-cli-linux-amd64
mv pinniped-cli-linux-amd64 /usr/local/bin/pinniped
chmod a+rx /usr/local/bin/pinniped

wget --progress=dot:giga https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
chmod +x /usr/local/bin/yq

snap install helm --classic
snap install kubectl --classic

apt-get install -y docker.io docker-compose

wget --progress=dot:giga https://github.com/docker/docker-credential-helpers/releases/download/v0.8.1/docker-credential-secretservice-v0.8.1.linux-amd64 \
  -O /usr/local/bin/docker-credential-secretservice
chmod a+rx /usr/local/bin/docker-credential-secretservice

wget --progress=dot:giga https://dl.min.io/client/mc/release/linux-amd64/mc \
  -O /usr/local/bin/mc

chmod +x /usr/local/bin/mc

# user
if [[ -n "${userfile}" ]]
then
  user=$(yq .username $userfile)
  givenname=$(yq .givenname $userfile)
  surname=$(yq .surname $userfile)
  gecos="${givenname} ${surname}"

  sed -e "s/\${USER}/${user}/g" conf/sudoers > /etc/sudoers.d/92-${user}
  id -u ${user} || adduser --home /home/${user} --shell /bin/bash --disabled-password --gecos "${gecos}" ${user}
else
  user=ubuntu
fi

# setup
sudo systemctl enable nslcd
systemctl start nslcd


if [[ "${desktop}" == "1" ]]
then
  service xrdp restart

  mkdir -p /etc/firefox/ca-certificates
  chmod a+rx /etc/firefox/ca-certificates
  cp /usr/local/share/ca-certificates/step_root_ca.crt /etc/firefox/ca-certificates/step_root_ca.crt
  chmod a+r /etc/firefox/ca-certificates/step_root_ca.crt
fi

curl -fSsL -o /usr/local/share/ca-certificates/step_root_ca.crt https://${step}:8444/step_root_ca.crt
curl -fSsL -o /usr/local/share/ca-certificates/step_intermediate_ca.crt https://${step}:8444/step_intermediate_ca.crt

usermod -aG docker $user

export user

mkdir -p /home/${user}/.docker
cat > /home/${user}/.docker/config.json <<EOF
{
  "credsStore": "secretservice"
}
EOF
chown -R ${user}:${user} /home/${user}/.docker

if [[ "${desktop}" == "1" ]]
then
  shutdown -r +1
fi