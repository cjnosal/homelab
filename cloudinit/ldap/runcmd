#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR=$(cd $(dirname $0) && pwd)

pushd ${SCRIPT_DIR}

# args
OPTIONS=(domain acme userfile)

help_this="initialize ldap server"
help_domain="parent domain of this environment"
help_acme="acme directory url to acquire TLS cert"
help_userfile="path of user.yml defining profile for first admin"

../base/runcmd

source /usr/local/include/argshelper
parseargs $@
requireargs userfile domain acme

export hostname=$(hostname | cut -d'.' -f1)

# ldap dc components from $domain
export suffix=$(sed -e 's/\./ /g' <<< ${domain} | xargs printf ",dc=%s" | sed -e 's/^,//')

# conf

mkdir -p /etc/ldap
mkdir -p /etc/sssd

sed -e "s/\${domain}/$domain/g" -e "s/\${hostname}/$hostname/g" -e "s/\${suffix}/$suffix/g" conf/ldap.conf > /etc/ldap/ldap.conf
sed -e "s/\${domain}/$domain/g" -e "s/\${hostname}/$hostname/g" -e "s/\${suffix}/$suffix/g" conf/sssd.conf > /etc/sssd/sssd.conf
cp conf/slapd /etc/default/slapd

sed -e "s/\${suffix}/$suffix/g" conf/org.ldif > /etc/ldap/org.ldif
sed -e "s/\${suffix}/$suffix/g" conf/access.ldif > /etc/ldap/access.ldif

cp include/* /usr/local/include/
cp scripts/* /usr/local/bin/

cat > /usr/local/include/ldap.env << EOF
   SUFFIX=${suffix}
   HOST=${hostname}.${domain}
   DOMAIN=${domain}
EOF

# creds
if [[ ! -f /root/ldap_admin.passwd ]]
then
  admincred=$(generatecred)
  echo $admincred > /root/ldap_admin.passwd
  chmod 400 /root/ldap_admin.passwd
else
  admincred=$(cat /root/ldap_admin.passwd)
fi

if [[ ! -f /root/user.passwd ]]
then
  password=$(generatecred)
  echo $password > /root/user.passwd
  chmod 400 /root/user.passwd
else
  password=$(cat /root/user.passwd)
fi

# packages

debconf-set-selections <<EOF
  slapd slapd/internal/generated_adminpw password ${admincred}
  slapd slapd/password2 password ${admincred}
  slapd slapd/internal/adminpw password ${admincred}
  slapd slapd/password1 password ${admincred}
  slapd slapd/domain string ${domain}
  slapd shared/organization string homelab
EOF

apt-get install -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" --force-yes slapd sssd-ldap ldap-utils ldb-tools sssd-tools

wget --progress=dot:giga https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
chmod +x /usr/local/bin/yq

# setup
initcertbot --acme $acme --group openldap --san ${hostname}.${domain} --chain /etc/ldap/ca.pem --key /etc/ldap/key.pem --cert /etc/ldap/cert.pem

ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f conf/certinfo.ldif
ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f /etc/ldap/access.ldif

hostnamectl set-hostname ${hostname}.${domain}

systemctl restart sssd.service
systemctl restart slapd


export LDAP_BIND_DN="cn=admin,${suffix}"
export LDAP_BIND_PW="${admincred}"

# default org units
ldapadd -H ldapi:/// -f /etc/ldap/org.ldif -x -D "$LDAP_BIND_DN" -w "$LDAP_BIND_PW"

# configure memberof module
ldapadd -H ldapi:/// -f conf/load_memberof.ldif -Q -Y EXTERNAL
ldapmodify -H ldapi:/// -f conf/load_refint.ldif -Q -Y EXTERNAL
ldapadd -H ldapi:/// -f conf/configure_refint.ldif -Q -Y EXTERNAL

# default groups
addldapgroup keycloak-realm-admin
addldapgroup step-admin
addldapgroup step-provisioner-admin
addldapgroup vault-user
addldapgroup vault-admin
addldapgroup ssh-ops
addldapgroup dns-ops
addldapgroup ldap-admin
addldapgroup k8s-core-admin
addldapgroup k8s-run-admin

# initial admin

username=$(yq .username $userfile)
givenname=$(yq .givenname $userfile)
surname=$(yq .surname $userfile)
email=$(yq .email $userfile)

addldapuser $username $givenname $surname $email

# mail
# postmaster/abuse mailbox
addldapuser webmaster Web Master webmaster@${domain}
# sent to non-existent account
addldapuser catchall Catch All catchall@${domain}
# service account
addldapuser mailbot Mail Bot mailbot@${domain}

# first user is admin of all components
addldapusertogroup $username keycloak-realm-admin
addldapusertogroup $username step-admin
addldapusertogroup $username step-provisioner-admin
addldapusertogroup $username vault-user
addldapusertogroup $username vault-admin
addldapusertogroup $username ssh-ops
addldapusertogroup $username dns-ops
addldapusertogroup $username ldap-admin
addldapusertogroup $username k8s-core-admin
addldapusertogroup $username k8s-run-admin

ldappasswd  -x -D "$LDAP_BIND_DN" -w "$LDAP_BIND_PW" -s $password -S uid=${username},ou=people,${suffix}

popd

echo success