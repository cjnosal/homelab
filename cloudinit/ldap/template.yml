#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@overlay/match by=overlay.all,expects="0+"
#@overlay/match-child-defaults missing_ok=True
---
write_files:
- path: /etc/ldap/ldap.conf
  owner: root:root
  permissions: '0644'
  #@yaml/text-templated-strings
  content: |
    #
    # LDAP Defaults
    #

    # See ldap.conf(5) for details
    # This file should be world readable but not world writable.
    BASE (@= data.values.suffix @)
    URI ldap://(@= data.values.hostname @).(@= data.values.zone @)

    #SIZELIMIT      12
    #TIMELIMIT      15
    #DEREF          never

    # TLS certificates (needed for GnuTLS)
    TLS_CACERT      /etc/ssl/certs/ca-certificates.crt
- path: /etc/default/slapd
  owner: root:root
  permissions: '0644'
  #@yaml/text-templated-strings
  content: |
    # Default location of the slapd.conf file or slapd.d cn=config directory. If
    # empty, use the compiled-in default (/etc/ldap/slapd.d with a fallback to
    # /etc/ldap/slapd.conf).
    SLAPD_CONF=

    # System account to run the slapd server under. If empty the server
    # will run as root.
    SLAPD_USER="openldap"

    # System group to run the slapd server under. If empty the server will
    # run in the primary group of its user.
    SLAPD_GROUP="openldap"

    # Path to the pid file of the slapd server. If not set the init.d script
    # will try to figure it out from $SLAPD_CONF (/etc/ldap/slapd.d by
    # default)
    SLAPD_PIDFILE=

    # slapd normally serves ldap only on all TCP-ports 389. slapd can also
    # service requests on TCP-port 636 (ldaps) and requests via unix
    # sockets.
    # Example usage:
    # SLAPD_SERVICES="ldap://127.0.0.1:389/ ldaps:/// ldapi:///"
    SLAPD_SERVICES="ldap:/// ldapi:/// ldaps:///"

    # If SLAPD_NO_START is set, the init script will not start or restart
    # slapd (but stop will still work).  Uncomment this if you are
    # starting slapd via some other means or if you don't want slapd normally
    # started at boot.
    #SLAPD_NO_START=1

    # If SLAPD_SENTINEL_FILE is set to path to a file and that file exists,
    # the init script will not start or restart slapd (but stop will still
    # work).  Use this for temporarily disabling startup of slapd (when doing
    # maintenance, for example, or through a configuration management system)
    # when you don't want to edit a configuration file.
    SLAPD_SENTINEL_FILE=/etc/ldap/noslapd

    # For Kerberos authentication (via SASL), slapd by default uses the system
    # keytab file (/etc/krb5.keytab).  To use a different keytab file,
    # uncomment this line and change the path.
    #export KRB5_KTNAME=/etc/krb5.keytab

    # Additional options to pass to slapd
    SLAPD_OPTIONS=""
- path: /etc/sssd/sssd.conf
  owner: root:root
  permissions: '0600'
  #@yaml/text-templated-strings
  content: |
    [sssd]
    config_file_version = 2
    domains = (@= data.values.hostname @).(@= data.values.zone @)

    [domain/(@= data.values.hostname @).(@= data.values.zone @)]
    id_provider = ldap
    auth_provider = ldap
    ldap_uri = ldap://(@= data.values.hostname @).(@= data.values.zone @)
    cache_credentials = True
    ldap_search_base = (@= data.values.suffix @)
- path: /run/certinfo.ldif
  owner: root:root
  permissions: '0600'
  #@yaml/text-templated-strings
  content: |
    dn: cn=config
    add: olcTLSCACertificateFile
    olcTLSCACertificateFile: /etc/ldap/ca.pem
    -
    add: olcTLSCertificateFile
    olcTLSCertificateFile: /etc/ldap/cert.pem
    -
    add: olcTLSCertificateKeyFile
    olcTLSCertificateKeyFile: /etc/ldap/key.pem
- path: /run/org.ldif
  owner: root:root
  permissions: '0600'
  #@yaml/text-templated-strings
  content: |
    dn: ou=People,(@= data.values.suffix @)
    objectClass: organizationalUnit
    ou: People

    dn: ou=Groups,(@= data.values.suffix @)
    objectClass: organizationalUnit
    ou: Groups

    dn: ou=Systems,(@= data.values.suffix @)
    objectClass: organizationalUnit
    ou: Systems
- path: /usr/local/include/ldapauthhelper
  owner: root:root
  permissions: '0644'
  content: #@ data.values.ldapauthhelper
- path: /usr/local/bin/addldapgroup
  owner: root:root
  permissions: '0755'
  content: #@ data.values.addldapgroup 
- path: /usr/local/bin/addldapuser
  owner: root:root
  permissions: '0755'
  content: #@ data.values.addldapuser
- path: /usr/local/bin/addldapsystem
  owner: root:root
  permissions: '0755'
  content: #@ data.values.addldapsystem
- path: /usr/local/bin/addldapusertogroup
  owner: root:root
  permissions: '0755'
  content: #@ data.values.addldapusertogroup
- path: /root/runcmd
  owner: root:root
  permissions: '0750'
  content: #@ data.values.runcmd
packages:
- sssd-ldap
- ldap-utils
- ldb-tools
- sssd-tools
runcmd:
#@yaml/text-templated-strings
- |
  /root/runcmd \
    (@= data.values.placeholderadmincred @) \
    (@= data.values.placeholderusercred @) \
    (@= data.values.username @) \
    (@= data.values.givenname @) \
    (@= data.values.surname @) \
    (@= data.values.email @)

