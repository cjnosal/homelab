#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR=$(cd $(dirname $0) && pwd)

OPTIONS=(host node img local_storage lvm_storage)

help_this="create a qemu template from an ubuntu cloud image"
help_img="base name of qcow2 image" # jammy-server-cloudimg-amd64
help_host="api hostname or ip"
help_node="pve node running the task"
help_local_storage="name of pve storage for ISOs"
help_lvm_storage="name of pve storage for LVMs"

source ${SCRIPT_DIR}/../cloudinit/base/include/argshelper

parseargs $@
requireargs host node img local_storage lvm_storage

source ${SCRIPT_DIR}/api/auth

VMID=$($SCRIPT_DIR/ids --next --start 9000 --end 9500)

TASK_ID=$(curl -X POST -fSsL -H"${auth}" "https://${host}:8006/api2/json/nodes/${node}/qemu" \
  -d name=${img} \
  -d node=${node} \
  -d vmid=${VMID} \
  -d agent=1 \
  -d cdrom=${lvm_storage}:cloudinit \
  -d citype=nocloud \
  -d cores=2 \
  -d cpu=host \
  -d memory=4096 \
  -d ostype=l26 \
  -d scsihw=virtio-scsi-pci \
  -d serial0=socket \
  -d storage=${lvm_storage} \
  -d vga=serial0 \
  -d template=1 \
  --data-urlencode net0=virtio,bridge=vmbr0 \
  --data-urlencode scsi0=${lvm_storage}:0,import-from=${local_storage}:0/${img}.qcow2,format=qcow2 \
  --data-urlencode boot=order=scsi0 \
  | jq -r .data)
${SCRIPT_DIR}/api/waitfortask --task $TASK_ID