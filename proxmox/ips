#!/usr/bin/env bash
set -uo pipefail

SCRIPT_DIR=$(cd $(dirname $0) && pwd)

source ${SCRIPT_DIR}/api/auth


FLAGS=(next)
OPTIONS=(host start end subnet)

help_this="default: print IP address of all VMs
  if argument "next" is provided print an IP available for the next VM"
help_host="api hostname or ip"
help_subnet="/24 prefix of ipv4 address"
help_start="start of id range to search for next available id"
help_end="end of id range to search for next available id"

source ${SCRIPT_DIR}/../cloudinit/base/include/argshelper

parseargs $@
requireargs host

start=${start:-201}
end=${end:-250}


IPLIST=()
for node in $(curl -fsL -H"${auth}" https://${host}:8006/api2/json/nodes | jq -r .data[].node)
do
  for vm in $(curl -fsL -H"${auth}" https://${host}:8006/api2/json/nodes/${node}/qemu | jq -r .data[].vmid)
  do
    ipconfig=$(curl -fsL -H"${auth}" https://${host}:8006/api2/json/nodes/${node}/qemu/${vm}/config | jq -r .data.ipconfig0)
    ip=$(sed -nr 's:.*ip=(.*)/.*:\1:p' <<< $ipconfig)
    IPLIST+=("$ip")
  done
done

IN_USE=$(echo "${IPLIST[*]}" | xargs -n1 echo | sort)



if [[ "${next}" == "1" ]]
then
  requireargs subnet
  subnet=$(cut -d'.' -f1-3 <<< $subnet)
  for i in $(seq $start $end)
  do
    if [[ ! " ${IPLIST[*]} " =~ " ${subnet}.${i} " ]]; then
        AVAILABLE="${subnet}.${i}"
        break
    fi
  done
  echo $AVAILABLE
else
  echo "$IN_USE"
fi